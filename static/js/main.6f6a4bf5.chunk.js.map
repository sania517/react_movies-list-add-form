{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","pattern","RegExp","NewMovie","state","validation","titleIsValid","imgUrlIsValid","imdbUrlIsValid","imdbIdIsValid","onSubmit","event","preventDefault","trim","match","props","onAdd","setState","inputChange","target","value","name","inputBlur","prevState","inputFilteredBlur","this","type","placeholder","size","onChange","onBlur","rows","cols","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f6a4bf5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewMovie.scss';\n\nconst pattern = new RegExp(`^((([A-Za-z]{3,9}:(?:\\\\/\\\\/)?)(?:[-;:&=+$,\\\\w]+@)?`\n    + `[A-Za-z0-9.-]+|(?:www\\\\.|[-;:&=+$,\\\\w]+@)[A-Za-z0-9.-]+)((?:\\\\/`\n    + `[+~%/.\\\\w-_]*)?\\\\??(?:[-+=&;%@.\\\\w_]*)#?(?:[.!/\\\\\\\\\\\\w]*))?)$`, 'gim');\n\nexport class NewMovie extends Component {\n  state = {\n    validation: {\n      titleIsValid: true,\n      imgUrlIsValid: true,\n      imdbUrlIsValid: true,\n      imdbIdIsValid: true,\n    },\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    if (!this.state.title.trim()\n      || !this.state.imdbId.trim()\n      || !this.state.imgUrl.trim().match(pattern)\n      || !this.state.imdbUrl.trim().match(pattern)\n    ) {\n      return;\n    }\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    this.props.onAdd({\n      title: title.trim(),\n      description: description.trim(),\n      imgUrl,\n      imdbUrl,\n      imdbId: imdbId.trim(),\n    });\n\n    this.setState({\n      validation: {\n        titleIsValid: true,\n        imgUrlIsValid: true,\n        imdbUrlIsValid: true,\n        imdbIdIsValid: true,\n      },\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  inputChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  inputBlur = (event) => {\n    const { name } = event.target;\n\n    this.setState(prevState => ({\n      validation: {\n        ...prevState.validation,\n        [`${name}IsValid`]: prevState[name].trim(),\n      },\n    }));\n  }\n\n  inputFilteredBlur = (event) => {\n    const { name } = event.target;\n\n    this.setState(prevState => ({\n      validation: {\n        ...prevState.validation,\n        [`${name}IsValid`]: prevState[name].trim().match(pattern),\n      },\n    }));\n  }\n\n  render() {\n    const { title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <div className=\"fieldWraper\">\n          <label\n            className={this.state.validation.titleIsValid ? '' : 'error'}\n          >\n            Movie title:\n            <input\n              type=\"text\"\n              placeholder=\"title\"\n              value={title}\n              size=\"40\"\n              name=\"title\"\n              onChange={this.inputChange}\n              className={this.state.validation.titleIsValid\n                ? ''\n                : 'error-border'\n              }\n              onBlur={this.inputBlur}\n            />\n          </label>\n        </div>\n        <div className=\"fieldWraper\">\n          <label>\n            Description movie:\n            <textarea\n              name=\"description\"\n              imdbId\n              placeholder=\"Description movie\"\n              rows=\"10\"\n              cols=\"40\"\n              onChange={this.inputChange}\n              value={description}\n            />\n          </label>\n        </div>\n        <div className=\"fieldWraper\">\n          <label\n            className={this.state.validation.imgUrlIsValid ? '' : 'error'}\n          >\n            ImgUrl:\n            <textarea\n              name=\"imgUrl\"\n              placeholder=\"ImgUrl movie\"\n              rows=\"4\"\n              cols=\"40\"\n              onChange={this.inputChange}\n              onBlur={this.inputFilteredBlur}\n              value={imgUrl}\n              className={this.state.validation.imgUrlIsValid\n                ? ''\n                : 'error-border'\n              }\n            />\n          </label>\n        </div>\n        <div className=\"fieldWraper\">\n          <label\n            className={this.state.validation.imdbUrlIsValid ? '' : 'error'}\n          >\n            ImdbUrl:\n            <textarea\n              name=\"imdbUrl\"\n              placeholder=\"ImdbUrl movie\"\n              rows=\"2\"\n              cols=\"40\"\n              onChange={this.inputChange}\n              onBlur={this.inputFilteredBlur}\n              value={imdbUrl}\n              className={this.state.validation.imdbUrlIsValid\n                ? ''\n                : 'error-border'\n              }\n            />\n          </label>\n        </div>\n        <div className=\"fieldWraper\">\n          <label\n            className={this.state.validation.imdbIdIsValid ? '' : 'error'}\n          >\n            ImdbId:\n            <input\n              name=\"imdbId\"\n              type=\"text\"\n              placeholder=\"ImdbId movie\"\n              value={imdbId}\n              size=\"40\"\n              onChange={this.inputChange}\n              onBlur={this.inputBlur}\n              className={this.state.validation.imdbIdIsValid\n                ? ''\n                : 'error-border'\n              }\n            />\n          </label>\n        </div>\n        <button type=\"submit\">\n          Add new movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}