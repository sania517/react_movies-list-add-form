{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","pattern","RegExp","NewMovie","state","validation","isTitleValid","isImgUrlValid","isImdbUrlValid","isImdbIdValid","onSubmit","event","preventDefault","props","onAdd","trim","setState","titleChange","value","target","prevState","descriptionChange","imgUrlChange","match","imdbUrlChange","imdbIdChange","onBlurHandlerTitle","currentTarget","classList","remove","add","onBlurHandlerImgUrl","onBlurHandlerImdbUrl","onBlurHandlerImdbId","this","onBlur","type","placeholder","size","onChange","rows","cols","disabled","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8a00b8d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewMovie.scss';\n\nconst pattern = new RegExp(`^((([A-Za-z]{3,9}:(?:\\\\/\\\\/)?)(?:[-;:&=+$,\\\\w]+@)?`\n    + `[A-Za-z0-9.-]+|(?:www\\\\.|[-;:&=+$,\\\\w]+@)[A-Za-z0-9.-]+)((?:\\\\/`\n    + `[+~%/.\\\\w-_]*)?\\\\??(?:[-+=&;%@.\\\\w_]*)#?(?:[.!/\\\\\\\\\\\\w]*))?)$`, 'gim');\n\nexport class NewMovie extends Component {\n  state = {\n    validation: {\n      isTitleValid: false,\n      isImgUrlValid: false,\n      isImdbUrlValid: false,\n      isImdbIdValid: false,\n    },\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    const { title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId } = this.state;\n\n    this.props.onAdd({\n      title: title.trim(),\n      description: description.trim(),\n      imgUrl,\n      imdbUrl,\n      imdbId: imdbId.trim(),\n    });\n\n    this.setState({\n      validation: {\n        isTitleValid: false,\n        isImgUrlValid: false,\n        isImdbUrlValid: false,\n        isImdbIdValid: false,\n      },\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  titleChange = (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      title: value,\n      validation: {\n        ...prevState.validation, isTitleValid: value.trim(),\n      },\n    }));\n  }\n\n  descriptionChange = (event) => {\n    this.setState({\n      description: event.target.value,\n    });\n  }\n\n  imgUrlChange= (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      imgUrl: value,\n      validation: {\n        ...prevState.validation,\n        isImgUrlValid: value.trim().match(pattern),\n      },\n    }));\n  }\n\n  imdbUrlChange= (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      imdbUrl: value,\n      validation: {\n        ...prevState.validation,\n        isImdbUrlValid: value.trim().match(pattern),\n      },\n    }));\n  }\n\n  imdbIdChange= (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      imdbId: value,\n      validation: {\n        ...prevState.validation,\n        isImdbIdValid: value.trim(),\n      },\n    }));\n  }\n\n  onBlurHandlerTitle = (event) => {\n    const { target, currentTarget } = event;\n\n    if (this.state.validation.isTitleValid) {\n      target.classList.remove('error-border');\n      currentTarget.classList.remove('error');\n    } else {\n      target.classList.add('error-border');\n      currentTarget.classList.add('error');\n    }\n  }\n\n  onBlurHandlerImgUrl = (event) => {\n    const { target, currentTarget } = event;\n\n    if (this.state.validation.isImgUrlValid) {\n      target.classList.remove('error-border');\n      currentTarget.classList.remove('error');\n    } else {\n      target.classList.add('error-border');\n      currentTarget.classList.add('error');\n    }\n  }\n\n  onBlurHandlerImdbUrl = (event) => {\n    const { target, currentTarget } = event;\n\n    if (this.state.validation.isImdbUrlValid) {\n      target.classList.remove('error-border');\n      currentTarget.classList.remove('error');\n    } else {\n      target.classList.add('error-border');\n      currentTarget.classList.add('error');\n    }\n  }\n\n  onBlurHandlerImdbId = (event) => {\n    const { target, currentTarget } = event;\n\n    if (this.state.validation.isImdbIdValid) {\n      target.classList.remove('error-border');\n      currentTarget.classList.remove('error');\n    } else {\n      target.classList.add('error-border');\n      currentTarget.classList.add('error');\n    }\n  }\n\n  render() {\n    const { title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <div className=\"fieldWraper\">\n          <label onBlur={this.onBlurHandlerTitle}>\n            Movie title:\n            <input\n              type=\"text\"\n              placeholder=\"title\"\n              value={title}\n              size=\"40\"\n              onChange={this.titleChange}\n            />\n          </label>\n        </div>\n        <div className=\"fieldWraper\">\n          <label>\n            Description movie:\n            <textarea\n              placeholder=\"Description movie\"\n              rows=\"10\"\n              cols=\"40\"\n              onChange={this.descriptionChange}\n              value={description}\n            />\n          </label>\n        </div>\n        <div className=\"fieldWraper\">\n          <label onBlur={this.onBlurHandlerImgUrl}>\n            ImgUrl:\n            <textarea\n              placeholder=\"ImgUrl movie\"\n              rows=\"4\"\n              cols=\"40\"\n              onChange={this.imgUrlChange}\n              value={imgUrl}\n            />\n          </label>\n        </div>\n        <div className=\"fieldWraper\">\n          <label onBlur={this.onBlurHandlerImdbUrl}>\n            ImdbUrl:\n            <textarea\n              placeholder=\"ImdbUrl movie\"\n              rows=\"2\"\n              cols=\"40\"\n              onChange={this.imdbUrlChange}\n              value={imdbUrl}\n            />\n          </label>\n        </div>\n        <div className=\"fieldWraper\">\n          <label onBlur={this.onBlurHandlerImdbId}>\n            ImdbId:\n            <input\n              type=\"text\"\n              placeholder=\"ImdbId movie\"\n              value={imdbId}\n              size=\"40\"\n              onChange={this.imdbIdChange}\n            />\n          </label>\n        </div>\n        <button\n          type=\"submit\"\n          disabled={!(this.state.validation.isTitleValid\n            && this.state.validation.isImgUrlValid\n            && this.state.validation.isImdbUrlValid\n            && this.state.validation.isImdbIdValid)}\n        >\n          Add new movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}