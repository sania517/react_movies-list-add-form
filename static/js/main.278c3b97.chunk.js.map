{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","isTitleValid","isImgUrlValid","isImdbUrlValid","isImdbIdValid","focused","isTitleFocused","isImgUrlFocused","isImdbUrlFocused","isImdbIdFocused","pattern2","RegExp","onSubmit","event","preventDefault","props","onAdd","trim","setState","titleChange","value","target","descriptionChange","imgUrlChange","match","imdbUrlChange","imdbIdChange","onBlurHandlerTitle","currentTarget","classList","remove","add","onBlurHandlerImgUrl","onBlurHandlerImdbUrl","onBlurHandlerImdbId","this","onBlur","type","placeholder","size","onChange","onFocus","rows","cols","disabled","Component","App","moviesFromServer","addMovie","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.278c3b97.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    isTitleValid: false,\n    isImgUrlValid: false,\n    isImdbUrlValid: false,\n    isImdbIdValid: false,\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  focused = {\n    isTitleFocused: false,\n    isImgUrlFocused: false,\n    isImdbUrlFocused: false,\n    isImdbIdFocused: false,\n  }\n\n  pattern2 = new RegExp(`^((([A-Za-z]{3,9}:(?:\\\\/\\\\/)?)(?:[-;:&=+$,\\\\w]+@)?`\n    + `[A-Za-z0-9.-]+|(?:www\\\\.|[-;:&=+$,\\\\w]+@)[A-Za-z0-9.-]+)((?:\\\\/`\n    + `[+~%/.\\\\w-_]*)?\\\\??(?:[-+=&;%@.\\\\w_]*)#?(?:[.!/\\\\\\\\\\\\w]*))?)$`, 'gim');\n\n  onSubmit = (event) => {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    event.preventDefault();\n    this.props.onAdd({\n      title: title.trim(),\n      description: description.trim(),\n      imgUrl,\n      imdbUrl,\n      imdbId: imdbId.trim(),\n    });\n\n    this.focused = {\n      isTitleFocused: false,\n      isImgUrlFocused: false,\n      isImdbUrlFocused: false,\n      isImdbIdFocused: false,\n    };\n\n    this.setState({\n      isTitleValid: false,\n      isImgUrlValid: false,\n      isImdbUrlValid: false,\n      isImdbIdValid: false,\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  titleChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      title: value,\n      isTitleValid: value.trim(),\n    });\n  }\n\n  descriptionChange = (event) => {\n    this.setState({\n      description: event.target.value,\n    });\n  }\n\n  imgUrlChange= (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      imgUrl: value,\n      isImgUrlValid: value.trim().match(this.pattern2),\n    });\n  }\n\n  imdbUrlChange= (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      imdbUrl: value,\n      isImdbUrlValid: value.trim().match(this.pattern2),\n    });\n  }\n\n  imdbIdChange= (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      imdbId: value,\n      isImdbIdValid: value.trim(),\n    });\n  }\n\n  onBlurHandlerTitle = (event) => {\n    const { target, currentTarget } = event;\n\n    if (this.state.isTitleValid) {\n      target.classList.remove('error-border');\n      currentTarget.classList.remove('error');\n    } else {\n      target.classList.add('error-border');\n      currentTarget.classList.add('error');\n    }\n  }\n\n  onBlurHandlerImgUrl = (event) => {\n    const { target, currentTarget } = event;\n\n    if (this.state.isImgUrlValid) {\n      target.classList.remove('error-border');\n      currentTarget.classList.remove('error');\n    } else {\n      target.classList.add('error-border');\n      currentTarget.classList.add('error');\n    }\n  }\n\n  onBlurHandlerImdbUrl = (event) => {\n    const { target, currentTarget } = event;\n\n    if (this.state.isImdbUrlValid) {\n      target.classList.remove('error-border');\n      currentTarget.classList.remove('error');\n    } else {\n      target.classList.add('error-border');\n      currentTarget.classList.add('error');\n    }\n  }\n\n  onBlurHandlerImdbId = (event) => {\n    const { target, currentTarget } = event;\n\n    if (this.state.isImdbIdValid) {\n      target.classList.remove('error-border');\n      currentTarget.classList.remove('error');\n    } else {\n      target.classList.add('error-border');\n      currentTarget.classList.add('error');\n    }\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <div className=\"fieldWraper\">\n          <label onBlur={this.onBlurHandlerTitle}>\n            Movie title:\n            <input\n              type=\"text\"\n              placeholder=\"title\"\n              value={title}\n              size=\"40\"\n              onChange={this.titleChange}\n              onFocus={(this.focused.isTitleFocused = true)}\n            />\n          </label>\n        </div>\n        <div className=\"fieldWraper\">\n          <label>\n            Description movie:\n            <textarea\n              placeholder=\"Description movie\"\n              rows=\"10\"\n              cols=\"40\"\n              onChange={this.descriptionChange}\n              value={description}\n            />\n          </label>\n        </div>\n        <div className=\"fieldWraper\">\n          <label onBlur={this.onBlurHandlerImgUrl}>\n            ImgUrl:\n            <textarea\n              placeholder=\"ImgUrl movie\"\n              rows=\"4\"\n              cols=\"40\"\n              onChange={this.imgUrlChange}\n              value={imgUrl}\n              onFocus={(this.focused.isImgUrlFocused = true)}\n            />\n          </label>\n        </div>\n        <div className=\"fieldWraper\">\n          <label onBlur={this.onBlurHandlerImdbUrl}>\n            ImdbUrl:\n            <textarea\n              placeholder=\"ImdbUrl movie\"\n              rows=\"2\"\n              cols=\"40\"\n              onChange={this.imdbUrlChange}\n              value={imdbUrl}\n              onFocus={(this.focused.isImdbUrlFocused = true)}\n            />\n          </label>\n        </div>\n        <div className=\"fieldWraper\">\n          <label onBlur={this.onBlurHandlerImdbId}>\n            ImdbId:\n            <input\n              type=\"text\"\n              placeholder=\"ImdbId movie\"\n              value={imdbId}\n              size=\"40\"\n              onChange={this.imdbIdChange}\n              onFocus={(this.focused.isImdbIdFocused = true)}\n            />\n          </label>\n        </div>\n        <button\n          type=\"submit\"\n          disabled={!(this.state.isTitleValid\n            && this.state.isImgUrlValid\n            && this.state.isImdbUrlValid\n            && this.state.isImdbIdValid)}\n        >\n          Add new movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState((prevState) => {\n      return {\n        movies: [...prevState.movies, movie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}